version: "3.7"

volumes:
  mongodb:
  data:

networks:
  kowalski:

services:

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    image: dmitryduev/kowalski_api:latest
    volumes:
      - data:/data
    expose:
      - "4000"
    # fixme:
    ports:
      - "4000:4000"
    links:
      - mongo:kowalski-mongo
    restart: always
    depends_on:
      - mongo
    networks:
      - kowalski

  ingester:
    build:
      context: .
      dockerfile: ingester.Dockerfile
    image: dmitryduev/kowalski_ingester:latest
    ports:
      - "8787:8787"
    volumes:
      - data:/data
    links:
      - mongo:kowalski-mongo
    restart: always
    depends_on:
      - mongo
    networks:
      - kowalski

  mongo:
    build:
      context: .
      dockerfile: mongo.Dockerfile
    hostname: mongo
    expose:
      - "27017"
    # fixme:
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=mongoadminsecret
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongodb:/data/db
    restart: always
    networks:
      - kowalski
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 20s
    # run as a replica set of size 1 called rs0 using keyfile for internal authorization
    command: [ "--keyFile", "/opt/keyfile", "--replSet", "rs0", "--bind_ip_all" ]
