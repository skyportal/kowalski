kowalski:
  server:
    name: "Kowalski"
    version: "2.0.0"
    description: "Kowalski: a toolkit for Time-Domain Astronomy"
    host: "0.0.0.0"
    port: 4000
    admin_username: "admin"
    # fixme: use a strong password
    admin_password: "admin"
    # fixme: use ''.join(secrets.choice(string.ascii_lowercase + string.digits) for _ in range(32))
    SECRET_KEY: "abc0123"
    JWT_SECRET_KEY: "abc0123"
    JWT_ALGORITHM: "HS256"
    JWT_EXP_DELTA_SECONDS:
    # fixme: use from cryptography.fernet import Fernet; Fernet.generate_key().decode()
    fernet_key: "irjsxvfJdqSJ2fcnpPacbH972dt-RPMMLE48PQ8J5Hg="

  ztf:
    mountain_ip: null
    mountain_port: null
    mountain_username: null
    mountain_password: null
    mountain_bind_ip: null
    mountain_bind_port: null

  path:
    app: "/app"
    docs: "/app/docs"
    ml_models: "/app/models/"
    logs: "/data/logs/"
    data: "/data"
    alerts: "/data/alerts"
    queries: "/data/queries"
    tess: "/data/tess"
    tmp: "/_tmp"
    kafka: "/kafka_2.13-2.5.0"

  kafka:
    default.topic.config:
      auto.offset.reset: "earliest"
    group: "kowalski"

    bootstrap.servers: "192.168.0.64:9092,192.168.0.65:9092,192.168.0.66:9092"
    zookeeper: "192.168.0.64:2181"
    bootstrap.test.servers: "localhost:9092"
    zookeeper.test: "localhost:2181"

  database:
    max_pool_size: 200
    host: "mongo"
    port: 27017
    # if not null, must be same as in entrypoint of mongo container
    replica_set: "rs0"
    db: "kowalski"
    admin_username: "mongoadmin"
    # fixme: use strong password if exposing the database to the world
    admin_password: "mongoadminsecret"
    username: "ztf"
    # fixme: use strong password if exposing the database to the world
    password: "ztf"

    build_indexes: True

    collections:
      users: "users"
      filters: "filters"
      queries: "queries"
      alerts_ztf: "ZTF_alerts"
      alerts_ztf_aux: "ZTF_alerts_aux"
      alerts_ztf_filter: "ZTF_alerts_filter"
      alerts_zuds: "ZUDS_alerts"
      alerts_zuds_aux: "ZUDS_alerts_aux"
      tns: "TNS"

    indexes:
      ZTF_alerts:
        - name: radec_candid
          fields:
            - ["coordinates.radec_geojson", "2dsphere"]
            - ["candid", -1]
          unique: false
        - name: radec_objectId
          fields:
            - ["coordinates.radec_geojson", "2dsphere"]
            - ["objectId", -1]
          unique: false
        - name: jd_radec_candid
          fields:
            - ["candidate.jd", 1]
            - ["coordinates.radec_geojson", "2dsphere"]
            - ["candid", -1]
          unique: false
        - name: jd_radec_objectId
          fields:
            - ["candidate.jd", 1]
            - ["coordinates.radec_geojson", "2dsphere"]
            - ["objectId", -1]
          unique: false
        - name: objectId
          fields:
            - ["objectId", -1]
          unique: false
        - name: candid
          fields:
            - ["candid", -1]
          unique: true
        - name: pid
          fields:
            - ["candidate.pid", 1]
          unique: false
        - name: objectId_pid
          fields:
            - ["objectId", -1]
            - ["candidate.pid", 1]
          unique: false
        - name: pdiffimfilename
          fields:
            - ["candidate.pdiffimfilename", 1]
          unique: false
        - name: jd_programid_programpi
          fields:
            - ["candidate.jd", 1]
            - ["candidate.programid", 1]
            - ["candidate.programpi", 1]
          unique: false
        - name: jd_braai_candid
          fields:
            - ["candidate.jd", -1]
            - ["classifications.braai", -1]
            - ["candid", -1]
          unique: false
        - name: jd_drb_candid
          fields:
            - ["candidate.jd", -1]
            - ["candidate.drb", -1]
            - ["candid", -1]
          unique: false
        - name: jd_braai_magpsf_isdiffpos_ndethist
          fields:
            - ["candidate.jd", 1]
            - ["classifications.braai", 1]
            - ["candidate.magpsf", 1]
            - ["candidate.isdiffpos", 1]
            - ["candidate.ndethist", 1]
          unique: false
        - name: jd_field_drb_ndethhist_magpsf_isdiffpos_objectId
          fields:
            - ["candidate.jd", 1]
            - ["candidate.field", 1]
            - ["candidate.rb", 1]
            - ["candidate.drb", 1]
            - ["candidate.ndethist", 1]
            - ["candidate.magpsf", 1]
            - ["candidate.isdiffpos", 1]
            - ["objectId", -1]
          unique: false

      TNS:
        - name: radec__id
          fields:
            - ["coordinates.radec_geojson", "2dsphere"]
            - ["_id", -1]
          unique: false
        - name: discovery_date
          fields:
            - ["discovery_date", -1]
          unique: false

    filters:
      ZTF_alerts:
        # default upstream aggregation pipeline stages for filtering ZTF alerts:
        - {
            "$match":
              { "candid": null, "candidate.programid": { "$in": null } },
          }
        - {
            "$project":
              {
                "cutoutScience": 0,
                "cutoutTemplate": 0,
                "cutoutDifference": 0,
              },
          }
        - {
            "$lookup":
              {
                "from": "ZTF_alerts_aux",
                "localField": "objectId",
                "foreignField": "_id",
                "as": "aux",
              },
          }
        - {
            "$project":
              {
                "cross_matches": { "$arrayElemAt": ["$aux.cross_matches", 0] },
                "prv_candidates":
                  {
                    "$filter":
                      {
                        "input": { "$arrayElemAt": ["$aux.prv_candidates", 0] },
                        "as": "item",
                        "cond":
                          {
                            "$and":
                              [
                                { "$in": ["$$item.programid", null] },
                                {
                                  "$lt":
                                    [
                                      {
                                        "$subtract":
                                          ["$candidate.jd", "$$item.jd"],
                                      },
                                      100,
                                    ],
                                },
                              ],
                          },
                      },
                  },
                "schemavsn": 1,
                "publisher": 1,
                "objectId": 1,
                "candid": 1,
                "candidate": 1,
                "classifications": 1,
                "coordinates": 1,
              },
          }

    xmatch:
      cone_search_radius: 2
      cone_search_unit: "arcsec"
      catalogs:
        2MASS_PSC:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            j_m: 1
            h_m: 1
            k_m: 1

        AllWISE:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            w1mpro: 1
            w1sigmpro: 1
            w2mpro: 1
            w2sigmpro: 1
            w3mpro: 1
            w3sigmpro: 1
            w4mpro: 1
            w4sigmpro: 1
            ph_qual: 1

        Gaia_DR2:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            parallax: 1
            parallax_error: 1
            phot_g_mean_mag: 1
            phot_bp_mean_mag: 1
            phot_rp_mean_mag: 1

        Gaia_EDR3:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            parallax: 1
            parallax_error: 1
            phot_g_mean_mag: 1
            phot_bp_mean_mag: 1
            phot_rp_mean_mag: 1

        Gaia_DR2_WD:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            White_dwarf_name: 1
            Pwd: 1
            Pwd_correction: 1
            SDSS_name: 1
            Teff: 1
            eTeff: 1

        PS1_STRM:
          filter: {}
          projection:
            _id: 1
            objID: 1
            coordinates.radec_str: 1
            class: 1
            prob_Galaxy: 1
            prob_Star: 1
            prob_QSO: 1
            z_phot: 1
            z_phot_err: 1

        galaxy_redshifts_20200522:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            z: 1
            l: 1
            b: 1

        GALEX:
          filter: {}
          projection:
            _id: 0
            name: 1
            coordinates.radec_str: 1
            FUVmag: 1
            e_FUVmag: 1
            NUVmag: 1
            e_NUVmag: 1

        IGAPS_DR2:
          filter: {}
          projection:
            _id: 0
            name: 1
            coordinates.radec_str: 1
            r: 1
            rErr: 1
            i: 1
            iErr: 1
            ha: 1
            haErr: 1
            U_RGO: 1
            UErr: 1

        LAMOST_DR5_v3:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            mjd: 1
            snru: 1
            snrg: 1
            snrr: 1
            snri: 1
            snrz: 1
            objtype: 1
            class: 1
            subclass: 1

        PS1_DR1:
          filter: {}
          projection:
            _id: 1
            coordinates.radec_str: 1
            gMeanPSFMag: 1
            gMeanPSFMagErr: 1
            rMeanPSFMag: 1
            rMeanPSFMagErr: 1
            iMeanPSFMag: 1
            iMeanPSFMagErr: 1
            zMeanPSFMag: 1
            zMeanPSFMagErr: 1
            yMeanPSFMag: 1
            yMeanPSFMagErr: 1

  ml_models:
    braai:
      version: "d6_m9"
    acai_h:
      version: "d1_dnn_20201130"
    acai_v:
      version: "d1_dnn_20201130"
    acai_o:
      version: "d1_dnn_20201130"
    acai_n:
      version: "d1_dnn_20201130"
    acai_b:
      version: "d1_dnn_20201130"

  skyportal:
    protocol: "http"
    host: "skyportal_web_1"
    port: 5000
    username: "kowalski"
    token: "<token>"

  ztf_depot:
    # fixme:
    username: "username"
    password: "password"

  ztf_ops:
    # fixme: Tom Barlow's ops db
    url: "http://site/allexp.tbl"
    username: "username"
    password: "password"

  tns:
    url: https://www.wis-tns.org

  dask:
    host: 127.0.0.1
    scheduler_port: 8786
    n_workers: 4
    threads_per_worker: 1
    lifetime: 24 hours
    lifetime_stagger: 1 hours
    lifetime_restart: true

  misc:
    # working stand-alone or in conjunction with a SkyPortal instance?
    broker: False
    supported_penquins_versions: ["2.0.0", "2.0.1", "2.0.2", "2.1.0", "2.1.1"]
    query_expiration_interval: 5
    max_time_ms: 300000
    max_retries: 100
    logging_level: "debug"
    openapi_validate: False

  slack:
    # Used by the performance_reporter.py task to post Slack messages
    slack_bot_token:
    slack_channel_id:

  # this is used to make supervisord.conf files at build time
  supervisord:
    api:
      unix_http_server:
        file: /dev/shm/supervisor.sock

      supervisord:
        logfile: /data/logs/supervisord.log
        logfile_maxbytes: 50MB
        logfile_backups: 20
        loglevel: info
        pidfile: /tmp/supervisord.pid
        nodaemon: True
        minfds: 1024
        minprocs: 200

      "rpcinterface:supervisor":
        "supervisor.rpcinterface_factory": supervisor.rpcinterface:make_main_rpcinterface

      supervisorctl:
        serverurl: unix:///dev/shm/supervisor.sock

      "program:gunicorn":
        # fixme: adjust number of workers -w for your system (e.g. -w 40 for kowalski.caltech.edu)
        command: >
          /usr/local/bin/gunicorn
          -w 2
          --bind 0.0.0.0:4000
          --worker-tmp-dir /dev/shm
          --worker-class aiohttp.GunicornUVLoopWebWorker
          --log-level=DEBUG
          --timeout 36000
          --max-requests 100000
          api:app_factory
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/gunicorn_stdout.log
        stdout_logfile_maxbytes: 30MB
        stderr_logfile: /data/logs/gunicorn_stderr.log
        redirect_stderr: True
        environment: "PRODUCTION=1"

    ingester:
      unix_http_server:
        file: /dev/shm/supervisor.sock

      supervisord:
        logfile: /data/logs/supervisord.log
        logfile_maxbytes: 50MB
        logfile_backups: 30
        loglevel: info
        pidfile: /tmp/supervisord.pid
        nodaemon: True
        minfds: 1024
        minprocs: 200

      "rpcinterface:supervisor":
        "supervisor.rpcinterface_factory": supervisor.rpcinterface:make_main_rpcinterface

      supervisorctl:
        serverurl: unix:///dev/shm/supervisor.sock

      "program:dask-cluster":
        command: /usr/local/bin/python dask_cluster.py
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/dask_cluster.log
        stdout_logfile_maxbytes: 50MB
        redirect_stderr: True
        environment: "PRODUCTION=1"

      "program:alert-broker-ztf":
        command: /usr/local/bin/python alert_broker_ztf.py
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/alert_broker_ztf.log
        stdout_logfile_maxbytes: 30MB
        redirect_stderr: True
        environment: "PRODUCTION=1"

      "program:ops-watcher-ztf":
        command: /usr/local/bin/python ops_watcher_ztf.py
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/ops_watcher_ztf.log
        stdout_logfile_maxbytes: 30MB
        redirect_stderr: True
        environment: "PRODUCTION=1"

      "program:tns-watcher":
        command: /usr/local/bin/python tns_watcher.py
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/tns_watcher.log
        stdout_logfile_maxbytes: 30MB
        redirect_stderr: True
        environment: "PRODUCTION=1"

      "program:tns-watcher-weekly":
        command: /usr/local/bin/python tns_watcher.py --graball
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/tns_watcher_weekly.log
        stdout_logfile_maxbytes: 30MB
        redirect_stderr: True
        environment: "PRODUCTION=1"

      "program:performance_reporter":
        command: /usr/local/bin/python performance_reporter.py --send_to_slack --days_ago 1
        directory: /app
        user: root
        autostart: true
        autorestart: true
        stdout_logfile: /data/logs/performance_reporter_stdout.log
        stdout_logfile_maxbytes: 10MB
        redirect_stderr: True
